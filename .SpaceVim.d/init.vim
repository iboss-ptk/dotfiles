" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#elixir')
call SpaceVim#layers#load('lang#go')
call SpaceVim#layers#load('lang#haskell')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#clojure')
call SpaceVim#layers#load('lang#clojurescript')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#swig')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('checkers')
call SpaceVim#layers#load('shell')
call SpaceVim#layers#load('tmux')
call SpaceVim#layers#load('tools#screensaver')
let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = ['vimlint', 'vint']
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''

" Use deoplete.
let g:deoplete#enable_at_startup = 1

" js eslint and flow
let g:spacevim_custom_plugins = [
        \ ['ayu-theme/ayu-vim'],
        \ ['w0rp/ale'],
        \ ['ElmCast/elm-vim'],
        \ ['flowtype/vim-flow',       { 'on_ft' : 'javascript'}],
        \ ['tpope/vim-salve',         { 'on_ft' : ['clojure', 'clojurescript']}],
        \ ['tpope/vim-dispatch',      { 'on_ft' : ['clojure', 'clojurescript']}],
        \ ['tpope/vim-projectionist', { 'on_ft' : ['clojure', 'clojurescript']}],
        \ ['tpope/vim-fireplace',     { 'on_ft' : ['clojure', 'clojurescript']}],
        \ ]


" IndentLine {{
let g:indentLine_showFirstIndentLevel = 1
let g:indentLine_setColors = 0
" }}

" eslint setup
let g:ale_linters = {
\   'javascript': ['eslint'],
\}
let g:airline#extensions#ale#enabled = 1
let g:ale_emit_conflict_warnings = 0
nmap <silent> <C-q> <Plug>(ale_previous_wrap)
nmap <silent> <C-w> <Plug>(ale_next_wrap)

" theme
set termguicolors
let ayucolor="dark"   " for dark version of theme
" let g:spacevim_colorscheme = 'hybrid_reverse'
let g:spacevim_colorscheme = 'ayu'

" elm related config
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

let g:elm_syntastic_show_warnings = 1

" set fold for programming
set foldmethod=marker
set foldmarker={,}
set foldnestmax=1

" copy and paste to system clipboard
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P

let g:tmux_navigator_disable_when_zoomed = 1
