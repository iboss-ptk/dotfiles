# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'atom-text-editor.vim-mode-plus.insert-mode':
  'j k': 'vim-mode-plus:activate-normal-mode' # jk to escape

# normal
# -------------------------
'atom-text-editor.vim-mode-plus.normal-mode':
  'y s': 'vim-mode-plus:surround'

  'd s': 'vim-mode-plus:delete-surround-any-pair'
  'd S': 'vim-mode-plus:delete-surround'

  'c s': 'vim-mode-plus:change-surround-any-pair'
  'c S': 'vim-mode-plus:change-surround'

  'space b': 'fuzzy-finder:toggle-buffer-finder'
  'space o': 'fuzzy-finder:toggle-file-finder'
  'space w': 'core:save'

# operator-pending only when surround-pending
# -------------------------
'atom-text-editor.vim-mode-plus.operator-pending-mode.surround-pending':
  's': 'vim-mode-plus:inner-current-line'

# visual
# -------------------------
'atom-text-editor.vim-mode-plus.visual-mode:not(.insert-mode)':
  'S': 'vim-mode-plus:surround'

# So that I can toggle comment for paragraph by `g / /`
'atom-text-editor.vim-mode-plus.toggle-line-comments-pending':
  '/': 'vim-mode-plus:inner-paragraph'

'atom-text-editor:not(.mini).vim-mode-plus:not(.insert-mode):not(.jumpy-jump-mode)':
  'f': 'jumpy:toggle'


# elm linter

'atom-text-editor.vim-mode-plus.normal-mode:not([mini])[data-grammar^="source elm"]':
  'e e q': 'linter-elm-make:quick-fix-all'

  # Add this to use the default UI:
  'e q': 'linter-elm-make:quick-fix'
